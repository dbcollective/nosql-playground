version: '3.8'
services:
  mongodb:
    container_name: mongodb
    image: mongo:latest
    hostname: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_ADMIN_DATABASE}
    env_file:
      - ./.env
    ports:
      - 27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test --quiet
      interval: 1s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/entrypoint/:/docker-entrypoint-initdb.d/:ro
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
        ME_CONFIG_MONGODB_SERVER: mongodb
        ME_CONFIG_MONGODB_ENABLE_ADMIN: true
        ME_CONFIG_MONGODB_AUTH_DATABASE: ${MONGO_ADMIN_DATABASE}
        ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
        ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
        ME_CONFIG_BASICAUTH_USERNAME: ${ME_BASICAUTH_USERNAME}
        ME_CONFIG_BASICAUTH_PASSWORD: ${ME_BASICAUTH_PASSWORD}
    volumes:
      - ./mongodb/data:/data/db
    depends_on:
      - mongodb
    ports:
      - ${ME_HOST_PORT:-8081}:8081
    healthcheck:
      test:  wget --quiet --tries=3 --spider http://${ME_BASICAUTH_USERNAME}:${ME_BASICAUTH_PASSWORD}@mongo-express:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  cassandra:
    container_name: cassandra
    image: cassandra:latest
    hostname: cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: ${CASSANDRA_CLUSTER_NAME}
    env_file:
      - ./.env
    ports:
      - 9042
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 1s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./cassandra/data:/var/lib/cassandra
      - ./cassandra/entrypoint/:/docker-entrypoint-initdb.d/:ro
  redis:
    container_name: redis
    image: redis:latest
    hostname: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    env_file:
      - ./.env
    ports:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./redis/data:/data